diff --git a/node_modules/@lucia-auth/adapter-prisma/dist/index.d.ts b/node_modules/@lucia-auth/adapter-prisma/dist/index.d.ts
index 6e996f9..f522050 100644
--- a/node_modules/@lucia-auth/adapter-prisma/dist/index.d.ts
+++ b/node_modules/@lucia-auth/adapter-prisma/dist/index.d.ts
@@ -2,7 +2,7 @@ import type { Adapter, DatabaseSession, DatabaseUser } from "lucia";
 export declare class PrismaAdapter<_PrismaClient extends PrismaClient> implements Adapter {
     private sessionModel;
     private userModel;
-    constructor(sessionModel: BasicPrismaModel, userModel: BasicPrismaModel);
+    constructor(sessionModel: BasicPrismaModel, userModel: BasicPrismaModel, userInclude?: any);
     deleteSession(sessionId: string): Promise<void>;
     deleteUserSessions(userId: string): Promise<void>;
     getSessionAndUser(sessionId: string): Promise<[session: DatabaseSession | null, user: DatabaseUser | null]>;
diff --git a/node_modules/@lucia-auth/adapter-prisma/dist/index.js b/node_modules/@lucia-auth/adapter-prisma/dist/index.js
index 1c9c85f..f2e1237 100644
--- a/node_modules/@lucia-auth/adapter-prisma/dist/index.js
+++ b/node_modules/@lucia-auth/adapter-prisma/dist/index.js
@@ -1,9 +1,11 @@
 export class PrismaAdapter {
     sessionModel;
     userModel;
-    constructor(sessionModel, userModel) {
+    userInclude;
+    constructor(sessionModel, userModel, userInclude) {
         this.sessionModel = sessionModel;
         this.userModel = userModel;
+        this.userInclude = userInclude;
     }
     async deleteSession(sessionId) {
         try {
@@ -31,7 +33,9 @@ export class PrismaAdapter {
                 id: sessionId
             },
             include: {
-                [userModelKey]: true
+                [userModelKey]: this.userInclude ? {
+                    include: this.userInclude
+                } : true
             }
         });
         if (!result)
